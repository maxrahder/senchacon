/*
 * File: app/model/Presentation.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Test.model.Presentation', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.field.Field',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json'
    ],

    fields: [
        {
            name: 'date'
        },
        {
            name: 'start_time'
        },
        {
            name: 'end_time'
        },
        {
            calculate: function(data) {
                return Ext.Date.parse((data.date + ' ' + data.start_time), 'Y-m-d g:i A');
            },
            name: 'startTime'
        },
        {
            calculate: function(data) {
                return Ext.Date.parse((data.date + ' ' + data.end_time), 'Y-m-d g:i A');
            },
            name: 'endTime'
        },
        {
            mapping: 'track.name',
            name: 'track'
        },
        {
            calculate: function(data) {
                return (Ext.Date.getElapsed(data.startTime, data.endTime)) / 1000 / 60;
            },
            name: 'duration'
        },
        {
            mapping: 'location.name',
            name: 'location'
        },
        {
            calculate: function(data) {
                return ((data.startTime.getHours() * 60) + data.startTime.getMinutes());
            },
            name: 'startMinutesFromMidnight'
        }
    ],

    proxy: {
        type: 'ajax',
        url: 'resources/data/sessions.json',
        reader: {
            type: 'json',
            rootProperty: 'sessions'
        }
    },

    contains: function(string) {
        return	Ext.String.createRegex(string, false, false, true).test(this.data.title) ||
                Ext.String.createRegex(string, false, false, true).test(this.data.description);

    }

});