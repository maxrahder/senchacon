/*
 * File: app/view/presentation/View.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Test.view.presentation.View', {
    extend: 'Ext.view.View',
    alias: 'widget.presentationview',

    requires: [
        'Test.view.presentation.ViewViewModel',
        'Test.view.override.presentation.View',
        'Ext.XTemplate'
    ],

    viewModel: {
        type: 'presentationview'
    },
    scrollable: true,
    emptyText: 'There are no matching presentations.',
    itemTpl: Ext.create('Ext.XTemplate', 
        '<div class="presentation collapsed">',
        '    <div class="daybar">',
        '        {[this.getPresentationBar(values)]}',
        '    </div>',
        '    <div class="title">',
        '        {[this.getFavoriteIcon(values)]}',
        '        {[this.getTrackIcon(values)]}',
        '        {title}',
        '    </div> ',
        '    <div class="description">',
        '        <div class="timeAndLocation">{startTime:date(\'H:i\')} to {startTime:date(\'H:i\')}, {location}</div>',
        '        {description}',
        '        <div class="speakers">',
        '            <table><tr>',
        '                <tpl for="speakers">',
        '                    <td>',
        '                        <figure><img src={avatar_url} height="80"/><figcaption>{name}</figcaption</figure>',
        '                    </td>',
        '                </tpl>',
        '            </tr></table>',
        '        </div>',
        '    </div>',
        '',
        '</div>',
        {
            getPresentationBar: function(values) {
                var startOfDayMinutesFromMidnight = (8 * 60); // 8:00 times 60 minutes per hour
                var endOfDayMinutesFromMidnight = (19 * 60); // 19:00 times 60 minutes per hour
                var durationOfDayMinutes = (endOfDayMinutesFromMidnight - startOfDayMinutesFromMidnight);
                var startOfLectureMinutes = (values.startMinutesFromMidnight - startOfDayMinutesFromMidnight);

                var percentagePerMinute = (1 / durationOfDayMinutes * 100);

                var startPercentage = (startOfLectureMinutes * percentagePerMinute);
                var durationPercentage = (values.duration * percentagePerMinute);

                var style = 'left: ' + startPercentage + '%; width: ' + durationPercentage + '%; ';
                var cls = this.trackIconCls[values.track];

                var startString = Ext.Date.format(values.startTime, 'H:i');
                var endString = Ext.Date.format(values.endTime, 'H:i');

                return '<span class= "' + cls + '" style="'+style+'">' + startString + ' - ' + endString + '</span>';
            },
            getTrackIcon: function(values) {
                return '<span class="trackicon ' + this.trackIconCls[values.track] +'"></span>';

            },
            getFavoriteIcon: function(values) {
                var cls = (values.favorite?'heartin':'heartout');
                return '<span class="favoriteicon ' + cls +'"></span>';

            },
            trackIconCls: {
                Design: 'design',
                Develop: 'develop',
                Deploy: 'deploy'
            },
            pixelsPerMinute: 1.75
        }
    ),
    defaultListenerScope: true,

    listeners: {
        itemclick: 'onDataviewItemClick'
    },

    onDataviewItemClick: function(dataview, record, item, index, e, eOpts) {
        if (Ext.fly(e.target).hasCls('favoriteicon')){
            record.set('favorite', !record.data.favorite);
        } else if (!Ext.fly(e.target).hasCls('description')){
            Ext.fly(item).down('div.presentation').toggleCls('collapsed');
        }

    }

});